<!DOCTYPE html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= title || 'Gerenciador de Tarefas' %></title>
    <link rel="stylesheet" href="/css/style.css" />
  </head>
  <body>
    <div class="container">
      <header>
        <h1>🏠 Gerenciador de Tarefas - Página Principal!!</h1>
        <nav>
          <a href="/tasks/new" class="btn btn-primary">➕ Nova Tarefa</a>
          <a href="/users" class="btn btn-success">👤 Usuários Cadastrados</a>
        </nav>
      </header>

      <main>
        <div id="messages-container"></div>

        <div class="card">
          <div class="section-header">
            <h2>📋 Lista de Tarefas</h2>
            <a href="/tasks/new" class="btn btn-primary">➕ Criar Tarefa</a>
          </div>

          <% if (tasks.length === 0) { %>
          <div class="alert alert-info">
            <p>
              Nenhuma tarefa cadastrada.
              <a href="/tasks/new">Criar primeira tarefa</a>
            </p>
          </div>
          <% } else { %>
          <div class="task-grid">
            <% tasks.forEach(task => { %>
            <div class="task-card <%= task.completed ? 'completed' : '' %>">
              <div class="task-header">
                <h3 class="task-title"><%= task.title %></h3>
                <span class="task-status <%= task.completed ? 'status-completed' : 'status-pending' %>">
                  <%= task.completed ? '✅ Concluída' : '⏳ Pendente' %>
                </span>
              </div>

              <div class="task-body">
                <p class="task-description">
                  <%= task.description || 'Sem descrição' %>
                </p>
                <div class="task-meta">
                  <% if (task.user) { %>
                  <span class="task-user">👤 <%= task.user %></span>
                  <% } %>
                  <% if (task.due_date) { %>
                  <span class="task-date">
                    📅 <%= new Date(task.due_date).toLocaleDateString('pt-BR') %>
                  </span>
                  <% } %>
                </div>
              </div>

              <div class="task-actions">
                <a href="/tasks/edit/<%= task.id %>" class="btn btn-sm btn-secondary">✏️ Editar</a>
                <button type="button" class="btn btn-sm <%= task.completed ? 'btn-warning' : 'btn-success' %>"
                  data-action="toggle-task" data-id="<%= task.id %>">
                  <%= task.completed ? '↩️ Reabrir' : '✅ Concluir' %>
                </button>
                <button type="button" class="btn btn-sm btn-danger" data-action="delete-task" data-id="<%= task.id %>">
                  🗑️ Excluir
                </button>
              </div>
            </div>
            <% }) %>
          </div>
          <% } %>
        </div>

        <div class="card">
          <h3>📊 Estatísticas</h3>
          <div class="stats-grid">
            <div class="stat-item">
              <span class="stat-number"><%= tasks.length %></span>
              <span class="stat-label">Total de Tarefas</span>
            </div>
            <div class="stat-item">
              <span class="stat-number"><%= tasks.filter(t => t.completed).length %></span>
              <span class="stat-label">Concluídas</span>
            </div>
            <div class="stat-item">
              <span class="stat-number"><%= tasks.filter(t => !t.completed).length %></span>
              <span class="stat-label">Pendentes</span>
            </div>
            <div class="stat-item">
              <span class="stat-number"><%= users.length %></span>
              <span class="stat-label">Usuários</span>
            </div>
          </div>
        </div>
      </main>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const urlParams = new URLSearchParams(window.location.search);
        const success = urlParams.get("success");
        const title = urlParams.get("title");
        const name = urlParams.get("name");
        const messagesContainer = document.getElementById("messages-container");

        if (success && messagesContainer) {
          let message = "";
          let alertClass = "alert-success";

          switch (success) {
            case "task_updated":
              message = `✅ Tarefa "${title || "sem título"}" foi atualizada com sucesso!`;
              break;
            case "task_deleted":
              message = `✅ Tarefa "${title || "sem título"}" foi excluída com sucesso!`;
              break;
            case "user_updated":
              message = `✅ Usuário "${name || "sem nome"}" foi atualizado com sucesso!`;
              break;
            case "user_deleted":
              message = `✅ Usuário "${name || "sem nome"}" foi excluído com sucesso!`;
              break;
            case "task_created":
              message = `✅ Tarefa "${title || "sem título"}" foi criada com sucesso!`;
              break;
            case "user_created":
              message = `✅ Usuário "${name || "sem nome"}" foi criado com sucesso!`;
              break;
            default:
              message = "✅ Operação realizada com sucesso!";
          }

          if (message) {
            const alertDiv = document.createElement("div");
            alertDiv.className = `alert ${alertClass}`;
            alertDiv.innerHTML = `
              <div style="display: flex; justify-content: space-between; align-items: center;">
                <span>${message}</span>
                <button onclick="this.parentElement.parentElement.remove()" style="background: none; border: none; font-size: 18px; cursor: pointer; color: #155724;">×</button>
              </div>`;
            messagesContainer.appendChild(alertDiv);

            setTimeout(() => {
              if (alertDiv.parentNode) alertDiv.remove();
            }, 5000);

            window.history.replaceState({}, document.title, window.location.pathname);
          }
        }

        document.body.addEventListener("click", (e) => {
          const btn = e.target.closest("button[data-action]");
          if (!btn) return;

          const action = btn.dataset.action;
          const id = btn.dataset.id;

          if (action === "toggle-task") {
            fetch(`/tasks/toggle/${id}`, { method: "POST" })
              .then(res => {
                if (res.redirected) {
                  window.location.href = res.url;
                } else {
                  alert("Erro ao alternar status da tarefa.");
                }
              })
              .catch(() => alert("Erro ao processar requisição."));
          }

          if (action === "delete-task") {
            if (!confirm("Tem certeza que deseja excluir esta tarefa?")) return;

            fetch(`/tasks/delete/${id}`, { method: "POST" })
              .then(res => {
                if (res.redirected) {
                  window.location.href = res.url;
                } else {
                  alert("Erro ao excluir tarefa.");
                }
              })
              .catch(() => alert("Erro ao processar requisição."));
          }

          if (action === "delete-user") {
            if (!confirm("Tem certeza que deseja excluir este usuário?")) return;

            fetch(`/users/delete/${id}`, { method: "POST" })
              .then(res => {
                if (res.redirected) {
                  window.location.href = res.url;
                } else {
                  alert("Erro ao excluir usuário.");
                }
              })
              .catch(() => alert("Erro ao processar requisição."));
          }
        });
      });
    </script>
  </body>
</html>
